4/*
** start.c for my_FTL in /home/boehm-s/Documents/ETNA/SDL_boehm_s
** 
** Made by BOEHM Steven
** Login   <boehm_s@etna-alternance.net>
** 
** Started on  Sat Nov 12 09:19:10 2016 BOEHM Steven
// Last update Tue Nov 15 17:23:58 2016 BOEHM Steven
*/

#include <stdlib.h>
#include "../includes/libmy.h"
#include "../includes/ftl.h"
#include "../includes/sdl_headers.h"

static unsigned int display_button = 0;


void		start_sdl(SDL_Surface *ecran)
{
  SDL_Event	event;
  SDL_Surface	*background;
  t_button	*start_button;

  start_button = malloc(sizeof(t_button));
  init_start_button(start_button);
  background = IMG_Load("assets/img/Space.png");
  SDL_BlitSurface(background, NULL, ecran, NULL);

  while (1)
    {
      if (SDL_PollEvent(&event))
	if (handle_event(ecran, background, event, start_button, display_button) == 1)
	  break;
      
      if (QUIT || ESCAPE)
	break;
      SDL_Delay(10);
      SDL_Flip(ecran);
    }
      
  SDL_FreeSurface(background);
}

void		init_start_button(t_button *button)
{
  button->normal = IMG_Load("assets/img/button/normal/play.png");
  button->hover = IMG_Load("assets/img/button/hover/play.png");
  button->click = IMG_Load("assets/img/button/click/play.png");
  button->f = &start_game;
  button->position.x = LARGEUR_FENETRE / 2 - LARGEUR_BUTTON / 2;
  button->position.y = HAUTEUR_FENETRE / 2 - HAUTEUR_BUTTON / 2;
}

int		blit_button(SDL_Surface *ecran, t_button *button, SDL_Event event)
{
  if (CLICK(button->position.x, (button->position.x + LARGEUR_BUTTON), button->position.y, (button->position.y + HAUTEUR_BUTTON)))
    {
      if (button->f(ecran, event) != 0) 
	return (1);      
    }
  else if (PUSH(button->position.x, (button->position.x + LARGEUR_BUTTON), button->position.y, (button->position.y + HAUTEUR_BUTTON)))
    button->display = button->click;
  else if (HOVER(button->position.x, (button->position.x + LARGEUR_BUTTON), button->position.y, (button->position.y + HAUTEUR_BUTTON)))
    button->display = button->hover;
  else
    button->display = button->normal;
  return (0);
}


int		start_game(SDL_Surface *ecran, SDL_Event event)
{
  t_button_command	main_buttons[4];
  int			i;
  
  SDL_Flip(ecran);
  display_button++;
  init_main_buttons(main_buttons);
  for (i = 0; i < 4; i++)
    SDL_BlitSurface(main_buttons[i].display, NULL, ecran, &(main_buttons[i].position));
  if (blit_main_button(ecran, main_buttons, event) != 0)
    return (1);

  SDL_Flip(ecran);

  UNUSED(event);
  
  return (0);
}

int		blit_main_button(SDL_Surface *ecran, t_button_command *button, SDL_Event event)
{
  int		i;
  t_ship	*ship = malloc(sizeof(t_ship));

  UNUSED(ecran);
  for (i = 0; i < 4; i++)
    {
      if (CLICK(button[i].position.x, (button[i].position.x + LARGEUR_BUTTON), button[i].position.y, (button[i].position.y + HAUTEUR_BUTTON)))
	{
	  if (button[i].f(ship) != 0)
	    return 1;
	}
      else if(PUSH(button[i].position.x, (button[i].position.x + LARGEUR_BUTTON), button[i].position.y, (button[i].position.y + HAUTEUR_BUTTON)))
	button[i].display = button[i].click;
      else if (HOVER(button[i].position.x, (button[i].position.x + LARGEUR_BUTTON), button[i].position.y, (button[i].position.y + HAUTEUR_BUTTON)))
	button[i].display = button[i].hover;
      else
	button[i].display = button[i].normal;
    }

  return (0);
}


void		init_main_buttons(t_button_command *button)
{
  int		i;


  button[0].normal = IMG_Load("assets/img/button/normal/attack.png");
  button[0].hover = IMG_Load("assets/img/button/hover/attack.png");
  button[0].click = IMG_Load("assets/img/button/click/attack.png");
  button[0].f = &command_attack;
  button[1].normal = IMG_Load("assets/img/button/normal/jump.png");
  button[1].hover = IMG_Load("assets/img/button/hover/jump.png");
  button[1].click = IMG_Load("assets/img/button/click/jump.png");
  button[1].f = &command_jump;
  button[2].normal = IMG_Load("assets/img/button/normal/detect.png");
  button[2].hover = IMG_Load("assets/img/button/hover/detect.png");
  button[2].click = IMG_Load("assets/img/button/click/detect.png");
  button[2].f = &command_detect;
  button[3].normal = IMG_Load("assets/img/button/normal/getbonus.png");
  button[3].hover = IMG_Load("assets/img/button/hover/getbonus.png");
  button[3].click = IMG_Load("assets/img/button/click/getbonus.png");
  button[3].f = &command_get_bonus;
  for (i = 0; i < 4; i++)
    {
      button[i].position.x = 100*i; /* (LARGEUR_FENETRE / 1.2) - (LARGEUR_BUTTON / 2); */
      button[i].position.y = 100*i; /* (HAUTEUR_FENETRE / 16) + (HAUTEUR_BUTTON + (HAUTEUR_BUTTON / 10)) * i; */
    }     
}
