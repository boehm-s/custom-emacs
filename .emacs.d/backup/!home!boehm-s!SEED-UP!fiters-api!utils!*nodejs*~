> var moment = require("moment");
undefined
> moment.locale('fr');
'fr'
>
> const pricing = {
...     baseBookingPrice : {         // prix de base
.....         amount: 40,
.....         users: -40,
.....         fitersSAS: 16,
.....         coach: 20,
.....         coachManager: 2,
.....         devise: 'â‚¬',
.....         rest: {
.......             punctualCoach: 1,
.......             fiveStars: 1,
.......             success: "coachManager",
.......             default: "fitersSAS"
.......         }
.....     },
...     baseCancelingPrice : 0,      // prix de base de l'annulation
...     baseLatePrice : 0,           // prix de base du retard
...     expressPurchasePrice : {     // prix achat express
.....         amount: 10,
.....         users: -10,
.....         fitersSAS: 10
.....     },
...     followOptionPrice : {        // prix option suivi
.....         amount: 5,
.....         users: -5,
.....         fitersSAS: 2.5,
.....         coach: 2.5
.....     },
...     roomPrice : {                // prix de la room
.....         amount: 10,
.....         users: -10,
.....         fitersSAS: 3,
.....         room: 5,
.....         rest: {
.......             fourStars: 1,
.......             fiveStars: 1,
.......             success: "room",
.......             default: "fitersSAS"
.......         }
.....     },
...
...     userCancelingPrice : {
...         level1 : {
.....             amount: 0,
.....             users: -0,
.....             fitersSAS: 0,
..... 	    options: {
....... 		follow: {
......... 		    amount: 5,
......... 		    users: -5,
......... 		    fitersSAS: 2.5,
......... 		    coach: 2.5
......... 		},
....... 		express: {
......... 		    amount: 10,
......... 		    users: -10,
......... 		    fitersSAS: 10
......... 		},
....... 		room: {
......... 		    amount: 10,
......... 		    users: -10,
......... 		    fitersSAS: 7.5,
......... 		    room: 2.5
......... 		}
....... 	    }
.....         },
...         level2 : {
.....             amount: 5,
.....             users: -5,
.....             fitersSAS: 5,
..... 	    options: {
....... 		follow: {
......... 		    amount: 5,
......... 		    users: -5,
......... 		    fitersSAS: 2.5,
......... 		    coach: 2.5
......... 		},
....... 		express: {
......... 		    amount: 10,
......... 		    users: -10,
......... 		    fitersSAS: 10
......... 		},
....... 		room: {
......... 		    amount: 10,
......... 		    users: -10,
......... 		    fitersSAS: 7.5,
......... 		    room: 2.5
......... 		}
....... 	    }
.....         },
...         level3 : {
.....             amount: 10,
.....             users: -10,
.....             fitersSAS: 10,
..... 	    options: {
....... 		follow: {
......... 		    amount: 5,
......... 		    users: -5,
......... 		    fitersSAS: 2.5,
......... 		    coach: 2.5
......... 		},
....... 		express: {
......... 		    amount: 10,
......... 		    users: -10,
......... 		    fitersSAS: 10
......... 		},
....... 		room: {
......... 		    amount: 10,
......... 		    users: -10,
......... 		    fitersSAS: 7.5,
......... 		    room: 2.5
......... 		}
....... 	    }
.....         },
...         level4 : {
.....             amount: 15,
.....             users: -15,
.....             fitersSAS: 15,
..... 	    options: {
....... 		follow: {
......... 		    amount: 5,
......... 		    users: -5,
......... 		    fitersSAS: 2.5,
......... 		    coach: 2.5
......... 		},
....... 		express: {
......... 		    amount: 10,
......... 		    users: -10,
......... 		    fitersSAS: 10
......... 		},
....... 		room: {
......... 		    amount: 10,
......... 		    users: -10,
......... 		    fitersSAS: 7.5,
......... 		    room: 2.5
......... 		}
....... 	    }
.....         },
...         level5 : {
.....             amount: 20,
.....             users: -20,
.....             fitersSAS: 20,
..... 	    options: {
....... 		follow: {
......... 		    amount: 5,
......... 		    users: -5,
......... 		    fitersSAS: 2.5,
......... 		    coach: 2.5
......... 		},
....... 		express: {
......... 		    amount: 10,
......... 		    users: -10,
......... 		    fitersSAS: 10
......... 		},
....... 		room: {
......... 		    amount: 10,
......... 		    users: -10,
......... 		    fitersSAS: 7.5,
......... 		    room: 2.5
......... 		}
....... 	    }
.....         }
...     },
...
...     lateUserPrice : {
...         level1 : {
.....             amount: 0,
.....             users: -0,
.....             coach: 0,
.....             coachManager: 0,
.....             fitersSAS: 0,
..... 	    options: {
....... 		follow: {
......... 		    amount: 5,
......... 		    users: -5,
......... 		    fitersSAS: 5
......... 		},
....... 		express: {
......... 		    amount: 10,
......... 		    users: -10,
......... 		    fitersSAS: 10
......... 		},
....... 		room: {
......... 		    amount: 10,
......... 		    users: -10,
......... 		    fitersSAS: 10
......... 		}
....... 	    }
.....         },
...         level2 : {
.....             amount: 5,
.....             users: -5,
.....             fitersSAS: 3.75,
.....             coach: 1.25,
.....             coachManager: 0,
..... 	    options: {
....... 		follow: {
......... 		    amount: 5,
......... 		    users: -5,
......... 		    fitersSAS: 5
......... 		},
....... 		express: {
......... 		    amount: 10,
......... 		    users: -10,
......... 		    fitersSAS: 10
......... 		},
....... 		room: {
......... 		    amount: 10,
......... 		    users: -10,
......... 		    fitersSAS: 10
......... 		}
....... 	    }
.....         },
...         level3 : {
.....             amount: 10,
.....             users: -10,
.....             fitersSAS: 7.5,
.....             coach: 2.5,
.....             coachManager: 0,
..... 	    options: {
....... 		follow: {
......... 		    amount: 5,
......... 		    users: -5,
......... 		    fitersSAS: 5
......... 		},
....... 		express: {
......... 		    amount: 10,
......... 		    users: -10,
......... 		    fitersSAS: 10
......... 		},
....... 		room: {
......... 		    amount: 10,
......... 		    users: -10,
......... 		    fitersSAS: 10
......... 		}
....... 	    }
.....         },
...         level4 : {
.....             amount: 15,
.....             users: -15,
.....             fitersSAS: 11.25,
.....             coach: 3.75,
.....             coachManager: 0,
..... 	    options: {
....... 		follow: {
......... 		    amount: 5,
......... 		    users: -5,
......... 		    fitersSAS: 5
......... 		},
....... 		express: {
......... 		    amount: 10,
......... 		    users: -10,
......... 		    fitersSAS: 10
......... 		},
....... 		room: {
......... 		    amount: 10,
......... 		    users: -10,
......... 		    fitersSAS: 10
......... 		}
....... 	    }
.....         },
...         level5 : {
.....             amount: 20,
.....             users: -20,
.....             fitersSAS: 14,
.....             coach: 6,
.....             coachManager: 0,
..... 	    options: {
....... 		follow: {
......... 		    amount: 5,
......... 		    users: -5,
......... 		    fitersSAS: 5
......... 		},
....... 		express: {
......... 		    amount: 10,
......... 		    users: -10,
......... 		    fitersSAS: 10
......... 		},
....... 		room: {
......... 		    amount: 10,
......... 		    users: -10,
......... 		    fitersSAS: 10
......... 		}
....... 	    }
.....         }
...     },
...
...     lateCoachPrice : {
...         level1 : {
.....             amount: 10,
.....             users: 10,
.....             fitersSAS: -4,
.....             coach: -5,
.....             coachManager: -1
.....         },
...         level2 : {
.....             amount: 20,
.....             users: 20,
.....             fitersSAS: -8,
.....             coach: -10,
.....             coachManager: -2
.....         },
...         level3 : {
.....             amount: 40,
.....             users: 40,
.....             fitersSAS: -16,
.....             coach: -20,
.....             coachManager: -4
.....         }
...     },
...
...     getCautionPrice(options) {
...         var cautionPrice = Math.abs(this.getBookingPrice(options).users);
... 	var maxAmountLate = this.lateUserPrice.level5.amount;
... 	maxAmountLate += Object.keys(this.lateUserPrice.level5.options)
... 	    .filter(key => options[key])
... 	    .map(key => this.lateUserPrice.level5.options[key].amount)
... 	    .reduce((pv, cv) => pv + cv);
...
... 	var maxAmountCancel = this.userCancelingPrice.level5.amount;
... 	maxAmountCancel += Object.keys(this.userCancelingPrice.level5.options)
... 	    .filter(key => options[key])
... 	    .map(key => this.userCancelingPrice.level5.options[key].amount)
... 	    .reduce((pv, cv) => pv + cv);
...
... 	cautionPrice += (maxAmountCancel > maxAmountLate)
...             ? maxAmountCancel
...             : maxAmountLate;
...
...         return cautionPrice;
...     },
...
...     getBookingPrice(options) {
...         var self = this;
...         var obj = {
.....             amount: 0,
.....             users: 0,
.....             room: 0,
.....             fitersSAS: 0,
.....             coach: 0,
.....             coachManager: 0,
.....             devise: '',
.....             rests: []
.....         };
...
...         insertOpt(self.baseBookingPrice);
...
...         if (options.follow)
...             insertOpt(self.followOptionPrice);
...         if (options.expressPurchase)
...             insertOpt(self.expressPurchasePrice);
...         if (options.room)
...             insertOpt(self.roomPrice);
...
...         function insertOpt(info) {
...             Object.keys(info).forEach(function(key) {
.....                 let value = info[key];
.....                 if (key === "rest") {
.......                     obj.rests.push(value);
.......                 } else if (obj.hasOwnProperty(key)) {
.......                     obj[key] += value;
.......                 }
.....             });
...         }
...
... 	obj.amount = Math.abs(obj.users);
...
...         return obj;
...     },
...
...     getCancelingPrice(booking, date) { // special booking object (with a lot of infos)
... 	var self = this;
...         var diffMinutes = self.getDiffMinutes(moment.utc(booking.sessionStart), date || moment.utc());
...         var options = self.getOptions(booking);
... 	var cancelingPrice = self.baseCancelingPrice;
...
... 	console.log(diffMinutes);
...
...         if (diffMinutes > 120) {
...             cancelingPrice += self.userCancelingPrice.level1.users;
... 	    cancelingPrice += Object.keys(
..... 		self.userCancelingPrice.level1.options
..... 	    ).filter(key => options[key])
... 		.map(key => self.userCancelingPrice.level1.options[key].users)
... 		.reduce((pv, cv) => pv + cv);
...
...         } else if (diffMinutes < 120 && diffMinutes >= 90) {
...             cancelingPrice += self.userCancelingPrice.level2.users;
... 	    cancelingPrice += Object.keys(
... 		self.userCancelingPrice.level2.options
... 	    ).filter(key => options[key])
... 		.map(key => self.userCancelingPrice.level2.options[key].users)
... 		.reduce((pv, cv) => pv + cv);
...
... 	} else if (diffMinutes < 90 && diffMinutes >= 30) {
...             cancelingPrice += self.userCancelingPrice.level3.users;
... 	    cancelingPrice += Object.keys(
... 		self.userCancelingPrice.level3.options
... 	    ).filter(key => options[key])
... 		.map(key => self.userCancelingPrice.level3.options[key].users)
... 		.reduce((pv, cv) => pv + cv);
...
... 	} else if (diffMinutes < 30 && diffMinutes >= 0) {
...             cancelingPrice += self.userCancelingPrice.level4.users;
... 	    cancelingPrice += Object.keys(
... 		self.userCancelingPrice.level4.options
... 	    ).filter(key => options[key])
... 		.map(key => self.userCancelingPrice.level4.options[key].users)
... 		.reduce((pv, cv) => pv + cv);
...
... 	} else if (diffMinutes < 0 && diffMinutes >= -30) {
...             cancelingPrice += self.userCancelingPrice.level5.users;
... 	    cancelingPrice += Object.keys(
... 		self.userCancelingPrice.level5.options
... 	    ).filter(key => options[key])
... 		.map(key => self.userCancelingPrice.level5.options[key].users)
... 		.reduce((pv, cv) => pv + cv);
... 	}
...
...         return cancelingPrice;
...     },
...
...
...     getUserLatePricing(options, minutes) {
... 	var self = this;
... 	var latePricing;
...         if (minutes <= 5) {
.....             latePricing = Object.keys(self.lateUserPrice.level1)
..... 	        .filter(key => key != 'options')
..... 	        .reduce((obj, key) => {
....... 		    obj[key] = self.lateUserPrice.level1[key];
....... 		    return obj;
....... 		}, {});
.....
... 	    Object.keys(self.lateUserPrice.level1.options)
... 		.filter(optionKey => options[optionKey])
... 		.forEach(optionKey => {
... 		    Object.keys(self.lateUserPrice.level1.options[optionKey])
... 			.filter(key => latePricing[key])
... 			.forEach(key => {
..... 			    latePricing[key] += self.lateUserPrice.level1.options[optionKey][key];
..... 			});
... 		});
... 	    return latePricing;
...
... 	} else if (minutes <= 10) {
...             latePricing = Object.keys(self.lateUserPrice.level2)
... 	        .filter(key => key != 'options')
... 	        .reduce((obj, key) => {
... 		    obj[key] = self.lateUserPrice.level2[key];
... 		    return obj;
... 		}, {});
...
... 	    Object.keys(self.lateUserPrice.level2.options)
... 		.filter(optionKey => options[optionKey])
... 		.forEach(optionKey => {
... 		    Object.keys(self.lateUserPrice.level2.options[optionKey])
... 			.filter(key => latePricing[key])
... 			.forEach(key => {
..... 			    latePricing[key] += self.lateUserPrice.level2.options[optionKey][key];
..... 			});
... 		});
... 	    return latePricing;
...
... 	} else if (minutes <= 15) {
...             latePricing = Object.keys(self.lateUserPrice.level3)
... 	        .filter(key => key != 'options')
... 	        .reduce((obj, key) => {
... 		    obj[key] = self.lateUserPrice.level3[key];
... 		    return obj;
... 		}, {});
...
... 	    Object.keys(self.lateUserPrice.level3.options)
... 		.filter(optionKey => options[optionKey])
... 		.forEach(optionKey => {
... 		    console.log(optionKey);
... 		    Object.keys(self.lateUserPrice.level3.options[optionKey])
... 			.filter(key => latePricing[key])
... 			.forEach(key => {
..... 			    latePricing[key] += self.lateUserPrice.level3.options[optionKey][key];
..... 			});
... 		});
... 	    return latePricing;
...
... 	} else if (minutes <= 20) {
...             latePricing = Object.keys(self.lateUserPrice.level4)
... 	        .filter(key => key != 'options')
... 	        .reduce((obj, key) => {
... 		    obj[key] = self.lateUserPrice.level4[key];
... 		    return obj;
... 		}, {});
...
... 	    Object.keys(self.lateUserPrice.level4.options)
... 		.filter(optionKey => options[optionKey])
... 		.forEach(optionKey => {
... 		    Object.keys(self.lateUserPrice.level4.options[optionKey])
... 			.filter(key => latePricing[key])
... 			.forEach(key => {
..... 			    latePricing[key] += self.lateUserPrice.level4.options[optionKey][key];
..... 			});
... 		});
... 	    return latePricing;
...
... 	} else if (minutes > 20) {
...             latePricing = Object.keys(self.lateUserPrice.level5)
... 	        .filter(key => key != 'options')
... 	        .reduce((obj, key) => {
... 		    obj[key] = self.lateUserPrice.level5[key];
... 		    return obj;
... 		}, {});
...
... 	    Object.keys(self.lateUserPrice.level5.options)
... 		.filter(optionKey => options[optionKey])
... 		.forEach(optionKey => {
... 		    Object.keys(self.lateUserPrice.level5.options[optionKey])
... 			.filter(key => latePricing[key])
... 			.forEach(key => {
..... 			    latePricing[key] += self.lateUserPrice.level5.options[optionKey][key];
..... 			});
... 		});
... 	    return latePricing;
...
... 	} else
...             return false;
...     },
...
...     getCoachLatePricing(minutes) {
...         if (minutes <= 5)
...             return this.lateCoachPrice.level1;
...         else if (minutes <= 10)
...             return this.lateCoachPrice.level2;
...         else if (minutes > 10)
...             return this.lateCoachPrice.level3;
...         else
...             return false;
...     },
...
...     getCoachManagerPay(booking) {
...
...     },
...
...     getDiffMinutes(date1, date2) {
...         const ret = Math.round((date1 - date2) / 60) / 1000;
...         return ret;
...     },
...     getOptions(booking) {
...         let options = {};
...
...         if (booking.coachActive == true)
...             options.follow = true;
...         if (booking.expressActive == true)
...             options.expressPurchase = true;
...         if (booking.roomActive == true)
...             options.room = true;
...
...         return options;
...     }
... };
undefined
>
> module.exports = pricing;
{ baseBookingPrice:
   { amount: 40,
     users: -40,
     fitersSAS: 16,
     coach: 20,
     coachManager: 2,
     devise: 'â‚¬',
     rest:
      { punctualCoach: 1,
        fiveStars: 1,
        success: 'coachManager',
        default: 'fitersSAS' } },
  baseCancelingPrice: 0,
  baseLatePrice: 0,
  expressPurchasePrice: { amount: 10, users: -10, fitersSAS: 10 },
  followOptionPrice: { amount: 5, users: -5, fitersSAS: 2.5, coach: 2.5 },
  roomPrice:
   { amount: 10,
     users: -10,
     fitersSAS: 3,
     room: 5,
     rest:
      { fourStars: 1,
        fiveStars: 1,
        success: 'room',
        default: 'fitersSAS' } },
  userCancelingPrice:
   { level1: { amount: 0, users: -0, fitersSAS: 0, options: [Object] },
     level2: { amount: 5, users: -5, fitersSAS: 5, options: [Object] },
     level3: { amount: 10, users: -10, fitersSAS: 10, options: [Object] },
     level4: { amount: 15, users: -15, fitersSAS: 15, options: [Object] },
     level5: { amount: 20, users: -20, fitersSAS: 20, options: [Object] } },
  lateUserPrice:
   { level1:
      { amount: 0,
        users: -0,
        coach: 0,
        coachManager: 0,
        fitersSAS: 0,
        options: [Object] },
     level2:
      { amount: 5,
        users: -5,
        fitersSAS: 3.75,
        coach: 1.25,
        coachManager: 0,
        options: [Object] },
     level3:
      { amount: 10,
        users: -10,
        fitersSAS: 7.5,
        coach: 2.5,
        coachManager: 0,
        options: [Object] },
     level4:
      { amount: 15,
        users: -15,
        fitersSAS: 11.25,
        coach: 3.75,
        coachManager: 0,
        options: [Object] },
     level5:
      { amount: 20,
        users: -20,
        fitersSAS: 14,
        coach: 6,
        coachManager: 0,
        options: [Object] } },
  lateCoachPrice:
   { level1:
      { amount: 10,
        users: 10,
        fitersSAS: -4,
        coach: -5,
        coachManager: -1 },
     level2:
      { amount: 20,
        users: 20,
        fitersSAS: -8,
        coach: -10,
        coachManager: -2 },
     level3:
      { amount: 40,
        users: 40,
        fitersSAS: -16,
        coach: -20,
        coachManager: -4 } },
  getCautionPrice: [Function: getCautionPrice],
  getBookingPrice: [Function: getBookingPrice],
  getCancelingPrice: [Function: getCancelingPrice],
  getUserLatePricing: [Function: getUserLatePricing],
  getCoachLatePricing: [Function: getCoachLatePricing],
  getCoachManagerPay: [Function: getCoachManagerPay],
  getDiffMinutes: [Function: getDiffMinutes],
  getOptions: [Function: getOptions] }
>
> pricing.getUserLatePricing({room: true}, 11)
room
{ amount: 20,
  users: -20,
  fitersSAS: 17.5,
  coach: 2.5,
  coachManager: 0 }
> 