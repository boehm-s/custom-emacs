var buildDBDisplay = function(dbName) {
    localStorage.setItem('currentDB', dbName);
    buildDBDisplayFrame();
    xhrRequest.GET({url: apiURL + '/database/' + dbName}, function(data) {
	var tables = JSON.parse(data.responseText);
	displayDbTables(tables);
	attachEventToDbTables();
    });
};

var displayDB = function(dbName) {
    xhrRequest.POST({
	url: apiURL + '?controller=table&action=stats',
	jsonParams: {
	    dbName: dbName
	}
    }, function(res) {
	buildDBDisplayFrame();
	displayDbTables(JSON.parse(res.responseText));
	attachEventsToDbTables();
    });
};

var displayDbTables = function(tables) {

    document.getElementById('database_display_frame').innerHTML = "";

    var html = tables.map(function(table) {
	var actions = ['rename', 'structure', 'search', 'insert', 'empty', 'drop'].map(function(el) {
	    return ['<div class="display_sql_table_', el, '">', el, '</div>'].join('');
	}).join('');


	var content = ['<td class="display_sql_table_select">', '<input type="checkbox" class="select_table"/>', '</td>',
		       '<td class="display_sql_table_name">', table.Name, '</td>',
		       '<td class="display_sql_table_actions">', actions, '</td>',
		       '<td class="display_sql_table_rowscount">', table.Rows, '</td>',
		       '<td class="display_sql_table_type">', table.Engine, '</td>',
		       '<td class="display_sql_table_size">', table.Data_length, '</td>'].join('');

	return ['<tr class="display_sql_table">', content, '</tr>'].join('');
    }).join('');

    document.getElementById('database_display_frame').insertAdjacentHTML('beforeend', html);
};

var buildDBDisplayFrame = function() {
    if (DISPLAY_DB.children.length > 0)
	return true;

    var frame = '\
<table id="database_display_frame"> \
  <div id="DD_frame_header" class="tr"> \
    <div id="DD_frame_select" class="th">  <input type="checkbox" id="check_all_tables"/>  </div>\
    <div id="DD_frame_table" class="th"> Table </div>\
    <div id="DD_frame_actions" class="th"> Actions </div>\
    <div id="DD_frame_rowscount" class="th"> Rows </div>\
    <div id="DD_frame_type" class="th"> Type </div>\
    <div id="DD_frame_size" class="th"> Size </div>\
  </div>\
</table>';

    DISPLAY_DB.innerHTML = frame;
    return true;
};

var attachEventsToDbTables = function() {
    var checkAll = document.getElementById('check_all_tables');
    var tables = Array.from(document.getElementsByClassName('display_sql_table'));

    checkAll.onclick = function(e) {
	var checks = Array.from(DISPLAY_DB.getElementsByClassName('select_table'));
	if (e.target.checked)
	    checks.forEach(function(input) { input.checked = true; });
	else
	    checks.forEach(function(input) { input.checked = false; });
    };

    tables.forEach(function(table, i) {
	tableNameEvent(table.getElementsByClassName('display_sql_table_name')[0]);
	var rename = table.getElementsByClassName('display_sql_table_rename')[0];
	var structure = table.getElementsByClassName('display_sql_table_structure')[0];
	var search = table.getElementsByClassName('display_sql_table_search')[0];
	var insert = table.getElementsByClassName('display_sql_table_insert')[0];
	var empty = table.getElementsByClassName('display_sql_table_empty')[0];
	var drop = table.getElementsByClassName('display_sql_table_drop')[0];

	[rename, structure, search, insert, empty, drop].forEach(function(el, i) {
	    el.onclick = function(e) {
		var dbName = localStorage.getItem('currentDB');
		var tableName = e.target.parentNode.parentNode.getElementsByClassName('display_sql_table_name')[0].innerHTML;
		tableActions[el.innerHTML.trim()](dbName, tableName, el);
		e.preventDefault();
		e.stopImmediatePropagation();
	    };
	});
    });
};


var tableNameEvent = function(el) {
	el.onclick = function(e) {
	    e.preventDefault();
	    e.stopImmediatePropagation();

	    var db = localStorage.getItem("currentDB");
	    var table = el.innerHTML.trim();

	    displayTableContent(db, table);
	};
};

var tableActions = {
    drop: function(dbName, tableName, el) {
	if (window.confirm("Are you sure you want to drop this DB ?"))
	    xhrRequest.POST({url: apiURL + '?controller=table&action=drop', jsonParams: {dbName: dbName, tableName: tableName}}, function(data) {
		if (data.status == 200)
		    el.parentNode.parentNode.remove();
	    });
    },
    empty: function(dbName, tableName, el) {
	if (localStorage.getItem('secureMode') == "true" && window.confirm("Are you sure you want to empty this DB ?"))
	    xhrRequest.POST({url: apiURL + '/database/' + dbName + '/empty'}, function(data) {
		console.log(data);
	    });
	else
	    xhrRequest.POST({url: apiURL + '/database/' + dbName + '/empty'}, function(data) {
		console.log(data);
	    });
    },
    rename: function(dbName, tableName, el) {
	var tableNameDiv = el.parentNode.parentNode.getElementsByClassName('display_sql_table_name')[0];
	tableNameDiv.innerHTML = ['<input id="tmp_rename_table" type="text" value="', tableName, '"/>'].join('');
	var input = tableNameDiv.children[0];
	input.focus();
	input.onkeypress = function(e) {
	    if (e.keyCode == 13){
		e.preventDefault();
		e.stopImmediatePropagation();
    		xhrRequest.POST({
		    url: apiURL + '/?controller=table&action=rename',
		    jsonParams: {previousName: tableName, newName: input.value, dbName: dbName}}, function(data) {
    			if (data.status == 200)
			    tableNameDiv.innerHTML = input.value;

			tableNameEvent(tableNameDiv);
    		    });
	    }
	};

    }

    // insert: function(dbName, tableName, el) {
    // 	xhrRequest.POST({url: apiURL + '/database/' + dbName + '/empty'}, function(data) {
    // 	    console.log(data);
    // 	});
    // },
    // search: function(dbName, tableName, el) {
    // 	xhrRequest.POST({url: apiURL + '/database/' + dbName + '/empty'}, function(data) {
    // 	    console.log(data);
    // 	});
    // },
    // structure: function(dbName, tableName, el) {
    // 	xhrRequest.POST({url: apiURL + '/database/' + dbName + '/empty'}, function(data) {
    // 	    console.log(data);
    // 	});
    // },
};
