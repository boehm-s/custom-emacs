const Bookshelf = require('../bookshelf');

const findAvailableCoach = async function(user_id, starting_session_time) {
    console.log("START TIME: " , starting_session_time);
    let res1 = await Bookshelf.knex.raw(`SELECT coaches.id FROM coaches
                                         LEFT JOIN bookings ON bookings."coachId" = coaches.id
                                         LEFT JOIN coach_availability ON coach_availability."coachId" = coaches.id
                                         WHERE (bookings."coachId" IS NULL OR bookings."userId" != ?)
                                         AND coach_availability.day = ?::date
                                         AND is_coach_available(coaches.id, ?::timestamp) = 'yes' LIMIT 1`,
					[user_id, starting_session_time, starting_session_time]);
    if (res1.rows[0] && res1.rows[0].id)
	if (await isCoachAvailable(res1.rows[0].id, starting_session_time))
	    return res1.rows[0].id;

    // dans le cas ou on n'a pas trouv√© de coach dispo n'ayant jamais eu de cours avec l'utilisateur
    let res2 = await Bookshelf.knex.raw(`SELECT COUNT(coaches.id) AS count, coaches.id FROM coaches
                                         LEFT JOIN coach_availability ON coach_availability."coachId" = coaches.id
                                         LEFT JOIN bookings ON bookings."coachId" = coaches.id
                                         WHERE coach_availability.day = current_date
                                         AND is_coach_available(coaches.id, ?::timestamp) = 'yes'
                                         AND bookings."userId" = ?
                                         GROUP BY coaches.id ORDER BY count ASC;`,
					[starting_session_time, user_id]);

    for (let i = 0; i < res2.rows.length; i++) {
	console.log("test availability for coach : " + res2.rows[i].id);
	if (await isCoachAvailable(res2.rows[i].id, starting_session_time)) {
	    return res2.rows[i].id;
	}
    }

    return false;
};

const isCoachAvailable = async function(coachId, timeStamp) {
    let res = await Bookshelf.knex.raw(`SELECT is_coach_available(?, ?::timestamp) AS answer;`, [coachId, timeStamp]);
    return (res.rows[0].answer == 'yes');
};


exports.findAvailableCoach = findAvailableCoach;
exports.isCoachAvailable = isCoachAvailable;
