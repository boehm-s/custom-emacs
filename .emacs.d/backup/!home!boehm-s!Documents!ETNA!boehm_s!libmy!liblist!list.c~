//
// list.c for liblist in /home/boehm-s/Documents/ETNA/boehm_s/libmy/liblist
//
// Made by BOEHM Steven
// Login   <boehm_s@etna-alternance.net>
//
// Started on  Wed Feb  1 02:28:47 2017 BOEHM Steven
// Last update Wed Feb  1 03:01:01 2017 BOEHM Steven
//

#include <stdlib.h>
#include "list.h"

t_list	    *list_new() {
  t_list    *self;

  if (!(self = malloc(sizeof(t_list)))) // malloc and check list
    return (NULL);
  self->head = NULL;
  self->tail = NULL;
  self->free_fn = NULL;
  self->length = 0;
  return (self);
};

void	    list_destroy(t_list *list) {
  size_t    len;
  t_node    *next;
  t_node    *curr;

  len = list->length;
  curr = list->head;
  while (len--) {
    next = curr->next;
    if (list->free_fn)
      list->free_fn(curr->data);
    free(curr);
    curr = next;
  }
  free(list);
}

t_node	    *list_append(t_list *list, t_node *node) {
  if (!node)
    return (NULL);

  if (list->length) {
    node->prev = list->tail;
    node->next = NULL;
    list->tail->next = node;
    list->tail = node;
  } else {
    list->head = node;
    list->tail = node;
    node->prev = NULL;
    node->next = NULL;
  }
  list->length++;
  return (node);
}
